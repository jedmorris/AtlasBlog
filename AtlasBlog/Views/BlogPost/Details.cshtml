@using AtlasBlog.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<BlogUser> _userManager

@model AtlasBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlogPostState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlogPostState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.BlogName)
        </dd>
    </dl>
</div>


<hr />

@if (User.Identity!.IsAuthenticated)
{
    <div class="col col-md-8">
        <form asp-controller="Comment" asp-action="Create">
            <input type="hidden" asp-for="Slug">
            <input type="hidden" name="BlogPostId" value=@Model.Id>
            <textarea class="form-control" name="CommentBody" rows=10 placeholder="Add Comment"></textarea>
            <button class="btn btn-dark">SUBMIT</button>
        </form>
    </div>

}
else
{
    <a class="nav-link text-dark fw-bold text-black" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "BlogPost", new { slug = Model.Slug })">Login to add a comment</a>
}

<hr />

<div class="container">
    <div id="CommentSection" class="row">
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.UpdatedDate))
        {
            <div class="col-12 my-2">
                <div class="targetParent card border-dark mb-3 w-100">
                    <div class="card-header">
                        <span class="float-start">Author: @comment.Author?.FullName</span>
                        @if(comment.ModeratedDate is null)
                        {
                            <span class="float-end">Created on: @comment.CreatedDate.ToString("MMM dd, yyyy")</span>
                        }
                        else
                        {
                            <span class="float-end text-danger fst-italic">Moderated on: @comment.ModeratedDate?.ToString("MMM dd, yyyy")</span>                            
                        }
                    </div>
                    <div class="targetChild card-body text-dark">
                        @if(comment.ModeratedDate is null)
                        {
                            <h5 class="card-title">@comment.CommentBody</h5>
                        }
                        else
                        {       
                            <h6 class="text-danger fst-italic">Moderation Reason: @comment.ModerationReason</h6>
                            <h5 class="card-title">@comment.ModeratedBody <span class="fst-italic text-muted ms-2">(modified...)</span></h5>
                        }
                    </div>

                    @*THIS IS FOR THE COMMENT AUTHOR*@
                    @if (comment.ModeratedDate is null && (comment.AuthorId == _userManager.GetUserId(User)))
                    {
                        <div class="card-footer">
                            <div class="row row-cols-1 row-cols-md-2 g-2">
                                <div class="col">
                                    <button class="btnModal btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">EDIT</button>
                                </div>
                                <div class="col">
                                    @*SweetAlert Window*@
                                    <button class="btnSwal btn btn-danger btn-sm w-100" data-commentId=@comment.Id>DELETE</button>
                                </div>
                            </div>
                        </div>
                    }

                    @*THIS IS FOR THE COMMENT MODERATOR*@
                    @if(User.IsInRole("Moderator"))
                    {
                         <div class="card-footer">
                            <div class="row row-cols-1 g-2">
                                <div class="col">
                                    <button class="btnModModal btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#moderateCommentModal">MODERATE</button>
                                </div>                               
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>



@*Load up all my modals here...*@
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel1">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Edit" asp-controller="Comment">
                    <input type="hidden" name="Id" id="modalCommentId" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="form-group">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" rows=10 name="CommentBody" id="modalCommentBody"></textarea>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-dark fw-bold w-100 fw-bold">EDIT</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-warning btn-outline-dark fw-bold" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="moderateCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel2">Moderating Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">   
                
                @*1. Display a read-only version of the original body
                2. A text area for collecting the Moderated Body
                3. Select List of Mod Reasons
                *@
                <form asp-action="Moderate" asp-controller="Comment">
                    <input type="hidden" name="Id" id="modalModerateCommentId" />

                    <div class="form-group">
                        <label class="control-label">Original Body</label>
                        <textarea id="modalModerateCommentBody" rows=5 class="form-control" readonly></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderated Body</label>
                        <textarea name="ModeratedBody" rows=5 class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderation Reason</label>
                        <select class="form-control" name="ModerationReason" asp-items="@Html.GetEnumSelectList<ModerationReason>()"></select>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-dark w-100 fw-bold">SAVE</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>            
            </div>
        </div>
    </div>
</div>


@*One form to handle all Comment dewletes on this page which is why we have to programmatically
insert the data*@
<form name="frmDeleteComment" asp-action="Delete" asp-controller="Comment">
    <input type="hidden" name="Id" id="deleteCommentId" />
</form>

@section Scripts {

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        document.querySelectorAll("button.btnSwal").forEach(btn => {
            btn.addEventListener("click", function(){
                document.getElementById("deleteCommentId").value = this.getAttribute('data-CommentId');
                DeleteComment();
            });
        });
        function DeleteComment(){
                    
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',                        
                }).then((result) => {
                    if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'Your comment has been deleted.',
                        icon: 'success',
                        showConfirmButton: false
                    })
                    setTimeout(function(){
                        document.frmDeleteComment.submit();    
                    }, 3000);
                           
                    }
                })                    
        }
    </script>

    <script>
        document.querySelectorAll("button.btnModal").forEach(btn => {
            btn.addEventListener("click", function(){
                //Thing 1: Get the Id of the comment into the Modal
                document.getElementById('modalCommentId').value = this.getAttribute('data-commentId');
                //Thing 2: Get the CommentBody into the modal
                let parent = this.closest("div.targetParent");
                let child = parent.querySelector("div.targetChild h5");
                document.getElementById('modalCommentBody').innerText = child.innerText;
            });
        });
    </script>

    <script>
         document.querySelectorAll("button.btnModModal").forEach(btn => {
            btn.addEventListener("click", function(){
                
                //Thing 1: Get the Id of the comment into the Modal
                document.getElementById('modalModerateCommentId').value = this.getAttribute('data-commentId');
                //Thing 2: Get the original CommentBody into the read only textarea of the modal
                let parent = this.closest("div.targetParent");
                let child = parent.querySelector("div.targetChild h5");
                document.getElementById('modalModerateCommentBody').innerText = child.innerText;
            });
         });
    </script>

}